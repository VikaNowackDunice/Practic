// 17

// Напишите универсальную функцию дебаунса

function debounce(func, delay){
  let timer;//созданется и замыкается
  return function(...args){
    clearTimeout(timer);
    timer = setTimeout(()=> {
      func.apply(this, args);
    }, delay)
  }
}

//пример:
const f=debounce(console.log, 1000)
f(1);
f(2);

setTimeout(()=> f(3), 100)
setTimeout(()=> f(4), 500)
setTimeout(()=> f(5), 1100)//сработает этот так как остальные очищаются из-за того что 
//1000мс не проходит чтобы зафиксировался результат

//для того чтобы ограничить вызову, например есть 50 вызовов функций, 
//мы схлопываем их в 1 вызов и установить время вызова, чем больше времени устанавливаем  
//тем меньше вызовов сотработает